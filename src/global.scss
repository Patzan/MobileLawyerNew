/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "@ionic/angular/css/normalize.css";
@import "@ionic/angular/css/structure.css";
@import "@ionic/angular/css/typography.css";
@import "@ionic/angular/css/display.css";

/* Optional CSS utils that can be commented out */
@import "@ionic/angular/css/padding.css";
@import "@ionic/angular/css/float-elements.css";
@import "@ionic/angular/css/text-alignment.css";
@import "@ionic/angular/css/text-transformation.css";
@import "@ionic/angular/css/flex-utils.css";

/**
 * Ionic Dark Mode
 * -----------------------------------------------------
 * For more info, please see:
 * https://ionicframework.com/docs/theming/dark-mode
 */

/* @import "@ionic/angular/css/palettes/dark.always.css"; */
/* @import "@ionic/angular/css/palettes/dark.class.css"; */
@import '@ionic/angular/css/palettes/dark.system.css';

// Modern Image Viewer Global Styles (replaces old image-viewer-modal)
.ion-img-viewer {
  --background: rgba(0, 0, 0, 0.95);
  
  .modal-wrapper {
    background: rgba(0, 0, 0, 0.95);
  }
  
  // Ensure proper RTL support for image viewer
  ion-toolbar {
    ion-title {
      direction: rtl;
      text-align: center;
    }
  }
}

/* ========================================
   GLOBAL HEADER & CONTENT SAFE AREA STYLES
   ======================================== */

// Global Header Safe Area Support - Prevents taskbar/status bar overlap
ion-header {
  // Ensure all headers respect device safe areas
  //padding-top: env(safe-area-inset-top, 0px);
  margin: max(50px, env(safe-area-inset-top) + 10px) auto 0 auto;
  
  ion-toolbar {
    // Dynamic height accounting for system UI
    --padding-top: env(safe-area-inset-top, 0px);
    --min-height: calc(56px + env(safe-area-inset-top, 0px));
    
    // Title safe area positioning
    ion-title {
      padding-top: env(safe-area-inset-top, 0px);
      
      // RTL support for all pages
      &.rtl-title {
        direction: rtl;
        text-align: center;
      }
    }
    
    // Button safe area support (back button, menu buttons, etc.)
    ion-buttons {
      padding-top: env(safe-area-inset-top, 0px);
    }
  }
}

// Global Content Safe Area Support
ion-content {
  // Ensure content starts after safe-area adjusted header
  --offset-top: calc(56px + env(safe-area-inset-top, 0px));
  
  // Bottom safe area for devices with home indicators
  --padding-bottom: env(safe-area-inset-bottom, 16px);
  --offset-bottom: env(safe-area-inset-bottom, 0px);
}

/* ========================================
   RESPONSIVE ADJUSTMENTS
   ======================================== */

// Mobile devices - larger touch targets
@media (max-width: 480px) {
  ion-header {
    ion-toolbar {
      // Larger header on mobile for better UX
      --min-height: calc(64px + env(safe-area-inset-top, 0px));
      
      ion-title {
        font-size: 1.1rem; // Slightly smaller on mobile
      }
    }
  }
  
  ion-content {
    // Adjust content offset for larger mobile header
    --offset-top: calc(64px + env(safe-area-inset-top, 0px));
  }
}

// Tablet devices - optimize for larger screens
@media (min-width: 768px) {
  ion-header {
    ion-toolbar {
      --min-height: calc(64px + env(safe-area-inset-top, 0px));
      
      ion-title {
        font-size: 1.25rem; // Larger on tablets
      }
    }
  }
  
  ion-content {
    --offset-top: calc(64px + env(safe-area-inset-top, 0px));
  }
}

// Landscape orientation - compact header
@media (orientation: landscape) {
  ion-header {
    ion-toolbar {
      // Compact header in landscape to save vertical space
      --min-height: calc(48px + env(safe-area-inset-top, 0px));
    }
  }
  
  ion-content {
    --offset-top: calc(48px + env(safe-area-inset-top, 0px));
  }
}

/* ========================================
   RTL SUPPORT (Global)
   ======================================== */

// Global RTL text support
.textrtl {
  direction: rtl;
  text-align: center;
}

.rtl-title {
  direction: rtl;
  text-align: center;
}

// RTL Alert styling (used across pages)
.rtl-alert {
  direction: rtl !important;
  
  .alert-message {
    text-align: right !important;
    direction: rtl !important;
  }
  
  .alert-button-confirm {
    font-weight: 500 !important;
  }
}

/* ========================================
   DARK MODE SAFE AREA SUPPORT
   ======================================== */

@media (prefers-color-scheme: dark) {
  ion-header {
    ion-toolbar {
      // Ensure dark mode headers still respect safe areas
      --padding-top: env(safe-area-inset-top, 0px);
      
      ion-title {
        padding-top: env(safe-area-inset-top, 0px);
      }
      
      ion-buttons {
        padding-top: env(safe-area-inset-top, 0px);
      }
    }
  }
}

/* ========================================
   UTILITY CLASSES FOR SPECIFIC PAGES
   ======================================== */

// For pages that need full viewport (like CheckVersion)
.full-viewport-content {
  ion-content {
    --offset-top: 0px !important;
    --offset-bottom: 0px !important;
  }
}

// For pages without header
.no-header-content {
  ion-content {
    --offset-top: env(safe-area-inset-top, 0px) !important;
  }
}

// For modal content that needs safe areas
.modal-safe-area {
  padding-top: env(safe-area-inset-top, 0px);
  padding-bottom: env(safe-area-inset-bottom, 0px);
  padding-left: env(safe-area-inset-left, 0px);
  padding-right: env(safe-area-inset-right, 0px);
}